// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: camel_case_types, constant_identifier_names, depend_on_referenced_packages, non_constant_identifier_names

import 'dart:convert' as convert show json;
import 'package:orm/configure.dart' as configure;
import 'package:orm/orm.dart' as runtime;
import 'package:orm/dmmf.dart' as dmmf;
import 'package:json_annotation/json_annotation.dart';

export 'package:orm/orm.dart'
    show Datasource, PrismaNull, PrismaUnion, TransactionIsolationLevel;

part 'prisma_client.g.dart';

//******************************************************************************
// This file was generated by Prisma ORM
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum QueryMode {
  default$,
  insensitive,
}

enum SortOrder {
  asc,
  desc,
}

enum UserScalarFieldEnum {
  id,
  email,
  name,
  password,
  role,
  createdAt,
  updatedAt,
}

class UserWhereInput implements runtime.JsonSerializable {
  const UserWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final List<UserWhereInput>? AND;
  final List<UserWhereInput>? OR;
  final List<UserWhereInput>? NOT;
  final runtime.PrismaUnion<IntFilter, int>? id;
  final runtime.PrismaUnion<StringFilter, String>? email;
  final runtime.PrismaUnion<StringNullableFilter, String>? name;
  final runtime.PrismaUnion<StringNullableFilter, String>? password;
  final runtime.PrismaUnion<StringNullableFilter, String>? role;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? createdAt;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'AND': AND,
        'OR': OR,
        'NOT': NOT,
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserOrderByWithRelationInput implements runtime.JsonSerializable {
  const UserOrderByWithRelationInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final SortOrder? id;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? password;
  final SortOrder? role;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserWhereUniqueInput implements runtime.JsonSerializable {
  const UserWhereUniqueInput({
    this.id,
    this.email,
  });

  final int? id;
  final String? email;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id, 'email': email};
}

class UserOrderByWithAggregationInput implements runtime.JsonSerializable {
  const UserOrderByWithAggregationInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final SortOrder? id;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? password;
  final SortOrder? role;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;
  final UserCountOrderByAggregateInput? $count;
  final UserAvgOrderByAggregateInput? $avg;
  final UserMaxOrderByAggregateInput? $max;
  final UserMinOrderByAggregateInput? $min;
  final UserSumOrderByAggregateInput? $sum;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt,
        '_count': $count,
        '_avg': $avg,
        '_max': $max,
        '_min': $min,
        '_sum': $sum
      };
}

class UserScalarWhereWithAggregatesInput implements runtime.JsonSerializable {
  const UserScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final List<UserScalarWhereWithAggregatesInput>? AND;
  final List<UserScalarWhereWithAggregatesInput>? OR;
  final List<UserScalarWhereWithAggregatesInput>? NOT;
  final runtime.PrismaUnion<IntWithAggregatesFilter, int>? id;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? email;
  final runtime.PrismaUnion<StringNullableWithAggregatesFilter, String>? name;
  final runtime.PrismaUnion<StringNullableWithAggregatesFilter, String>?
      password;
  final runtime.PrismaUnion<StringNullableWithAggregatesFilter, String>? role;
  final runtime.PrismaUnion<DateTimeWithAggregatesFilter, DateTime>? createdAt;
  final runtime.PrismaUnion<DateTimeWithAggregatesFilter, DateTime>? updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'AND': AND,
        'OR': OR,
        'NOT': NOT,
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserCreateInput implements runtime.JsonSerializable {
  const UserCreateInput({
    required this.id,
    required this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final int id;
  final String email;
  final runtime.PrismaUnion<String, runtime.PrismaNull>? name;
  final runtime.PrismaUnion<String, runtime.PrismaNull>? password;
  final runtime.PrismaUnion<String, runtime.PrismaNull>? role;
  final DateTime? createdAt;
  final DateTime? updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserUncheckedCreateInput implements runtime.JsonSerializable {
  const UserUncheckedCreateInput({
    required this.id,
    required this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final int id;
  final String email;
  final runtime.PrismaUnion<String, runtime.PrismaNull>? name;
  final runtime.PrismaUnion<String, runtime.PrismaNull>? password;
  final runtime.PrismaUnion<String, runtime.PrismaNull>? role;
  final DateTime? createdAt;
  final DateTime? updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserUpdateInput implements runtime.JsonSerializable {
  const UserUpdateInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      name;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      password;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      role;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserUncheckedUpdateInput implements runtime.JsonSerializable {
  const UserUncheckedUpdateInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      name;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      password;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      role;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserCreateManyInput implements runtime.JsonSerializable {
  const UserCreateManyInput({
    required this.id,
    required this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final int id;
  final String email;
  final runtime.PrismaUnion<String, runtime.PrismaNull>? name;
  final runtime.PrismaUnion<String, runtime.PrismaNull>? password;
  final runtime.PrismaUnion<String, runtime.PrismaNull>? role;
  final DateTime? createdAt;
  final DateTime? updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserUpdateManyMutationInput implements runtime.JsonSerializable {
  const UserUpdateManyMutationInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      name;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      password;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      role;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserUncheckedUpdateManyInput implements runtime.JsonSerializable {
  const UserUncheckedUpdateManyInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      name;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      password;
  final runtime.PrismaUnion<String, NullableStringFieldUpdateOperationsInput>?
      role;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>?
      updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class IntFilter implements runtime.JsonSerializable {
  const IntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class StringFilter implements runtime.JsonSerializable {
  const StringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final QueryMode? mode;
  final runtime.PrismaUnion<String, NestedStringFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'mode': mode,
        'not': not
      };
}

class StringNullableFilter implements runtime.JsonSerializable {
  const StringNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
  });

  final runtime.PrismaUnion<String, runtime.PrismaNull>? equals;
  final runtime.PrismaUnion<List<String>, runtime.PrismaNull>? in$;
  final runtime.PrismaUnion<List<String>, runtime.PrismaNull>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final QueryMode? mode;
  final runtime.PrismaUnion<String, NestedStringNullableFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'mode': mode,
        'not': not
      };
}

class DateTimeFilter implements runtime.JsonSerializable {
  const DateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class UserCountOrderByAggregateInput implements runtime.JsonSerializable {
  const UserCountOrderByAggregateInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final SortOrder? id;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? password;
  final SortOrder? role;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserAvgOrderByAggregateInput implements runtime.JsonSerializable {
  const UserAvgOrderByAggregateInput({
    this.id,
  });

  final SortOrder? id;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id};
}

class UserMaxOrderByAggregateInput implements runtime.JsonSerializable {
  const UserMaxOrderByAggregateInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final SortOrder? id;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? password;
  final SortOrder? role;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserMinOrderByAggregateInput implements runtime.JsonSerializable {
  const UserMinOrderByAggregateInput({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  final SortOrder? id;
  final SortOrder? email;
  final SortOrder? name;
  final SortOrder? password;
  final SortOrder? role;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'id': id,
        'email': email,
        'name': name,
        'password': password,
        'role': role,
        'createdAt': createdAt,
        'updatedAt': updatedAt
      };
}

class UserSumOrderByAggregateInput implements runtime.JsonSerializable {
  const UserSumOrderByAggregateInput({
    this.id,
  });

  final SortOrder? id;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'id': id};
}

class IntWithAggregatesFilter implements runtime.JsonSerializable {
  const IntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedFloatFilter? $avg;
  final NestedIntFilter? $sum;
  final NestedIntFilter? $min;
  final NestedIntFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_avg': $avg,
        '_sum': $sum,
        '_min': $min,
        '_max': $max
      };
}

class StringWithAggregatesFilter implements runtime.JsonSerializable {
  const StringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final QueryMode? mode;
  final runtime.PrismaUnion<String, NestedStringWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedStringFilter? $min;
  final NestedStringFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'mode': mode,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class StringNullableWithAggregatesFilter implements runtime.JsonSerializable {
  const StringNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final runtime.PrismaUnion<String, runtime.PrismaNull>? equals;
  final runtime.PrismaUnion<List<String>, runtime.PrismaNull>? in$;
  final runtime.PrismaUnion<List<String>, runtime.PrismaNull>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final QueryMode? mode;
  final runtime.PrismaUnion<String, NestedStringNullableWithAggregatesFilter>?
      not;
  final NestedIntNullableFilter? $count;
  final NestedStringNullableFilter? $min;
  final NestedStringNullableFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'mode': mode,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class DateTimeWithAggregatesFilter implements runtime.JsonSerializable {
  const DateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedDateTimeFilter? $min;
  final NestedDateTimeFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class IntFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const IntFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final int? set$;
  final int? increment;
  final int? decrement;
  final int? multiply;
  final int? divide;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'set': set$,
        'increment': increment,
        'decrement': decrement,
        'multiply': multiply,
        'divide': divide
      };
}

class StringFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const StringFieldUpdateOperationsInput({
    this.set$,
  });

  final String? set$;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'set': set$};
}

class NullableStringFieldUpdateOperationsInput
    implements runtime.JsonSerializable {
  const NullableStringFieldUpdateOperationsInput({
    this.set$,
  });

  final runtime.PrismaUnion<String, runtime.PrismaNull>? set$;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'set': set$};
}

class DateTimeFieldUpdateOperationsInput implements runtime.JsonSerializable {
  const DateTimeFieldUpdateOperationsInput({
    this.set$,
  });

  final DateTime? set$;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{'set': set$};
}

class NestedIntFilter implements runtime.JsonSerializable {
  const NestedIntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedStringFilter implements runtime.JsonSerializable {
  const NestedStringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not
      };
}

class NestedStringNullableFilter implements runtime.JsonSerializable {
  const NestedStringNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final runtime.PrismaUnion<String, runtime.PrismaNull>? equals;
  final runtime.PrismaUnion<List<String>, runtime.PrismaNull>? in$;
  final runtime.PrismaUnion<List<String>, runtime.PrismaNull>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringNullableFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not
      };
}

class NestedDateTimeFilter implements runtime.JsonSerializable {
  const NestedDateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedIntWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedIntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedFloatFilter? $avg;
  final NestedIntFilter? $sum;
  final NestedIntFilter? $min;
  final NestedIntFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_avg': $avg,
        '_sum': $sum,
        '_min': $min,
        '_max': $max
      };
}

class NestedFloatFilter implements runtime.JsonSerializable {
  const NestedFloatFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final double? equals;
  final List<double>? in$;
  final List<double>? notIn;
  final double? lt;
  final double? lte;
  final double? gt;
  final double? gte;
  final runtime.PrismaUnion<double, NestedFloatFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedStringWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedStringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedStringFilter? $min;
  final NestedStringFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class NestedStringNullableWithAggregatesFilter
    implements runtime.JsonSerializable {
  const NestedStringNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final runtime.PrismaUnion<String, runtime.PrismaNull>? equals;
  final runtime.PrismaUnion<List<String>, runtime.PrismaNull>? in$;
  final runtime.PrismaUnion<List<String>, runtime.PrismaNull>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringNullableWithAggregatesFilter>?
      not;
  final NestedIntNullableFilter? $count;
  final NestedStringNullableFilter? $min;
  final NestedStringNullableFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'contains': contains,
        'startsWith': startsWith,
        'endsWith': endsWith,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

class NestedIntNullableFilter implements runtime.JsonSerializable {
  const NestedIntNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final runtime.PrismaUnion<int, runtime.PrismaNull>? equals;
  final runtime.PrismaUnion<List<int>, runtime.PrismaNull>? in$;
  final runtime.PrismaUnion<List<int>, runtime.PrismaNull>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntNullableFilter>? not;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not
      };
}

class NestedDateTimeWithAggregatesFilter implements runtime.JsonSerializable {
  const NestedDateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedDateTimeFilter? $min;
  final NestedDateTimeFilter? $max;

  @override
  Map<String, dynamic> toJson() => <String, dynamic>{
        'equals': equals,
        'in': in$,
        'notIn': notIn,
        'lt': lt,
        'lte': lte,
        'gt': gt,
        'gte': gte,
        'not': not,
        '_count': $count,
        '_min': $min,
        '_max': $max
      };
}

@JsonSerializable(createFactory: true, createToJson: true, explicitToJson: true)
class AggregateUser {
  const AggregateUser({
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateUser.fromJson(Map<String, dynamic> json) =>
      _$AggregateUserFromJson(json);

  @JsonKey(name: '_avg')
  final UserAvgAggregateOutputType? $avg;

  @JsonKey(name: '_sum')
  final UserSumAggregateOutputType? $sum;

  @JsonKey(name: '_min')
  final UserMinAggregateOutputType? $min;

  @JsonKey(name: '_max')
  final UserMaxAggregateOutputType? $max;

  Map<String, dynamic> toJson() => _$AggregateUserToJson(this);
}

@JsonSerializable(createFactory: true, createToJson: true, explicitToJson: true)
class UserGroupByOutputType {
  const UserGroupByOutputType({
    required this.id,
    required this.email,
    this.name,
    this.password,
    this.role,
    required this.createdAt,
    required this.updatedAt,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory UserGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserGroupByOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'email')
  final String email;

  @JsonKey(name: 'name')
  final String? name;

  @JsonKey(name: 'password')
  final String? password;

  @JsonKey(name: 'role')
  final String? role;

  @JsonKey(name: 'createdAt')
  final DateTime createdAt;

  @JsonKey(name: 'updatedAt')
  final DateTime updatedAt;

  @JsonKey(name: '_avg')
  final UserAvgAggregateOutputType? $avg;

  @JsonKey(name: '_sum')
  final UserSumAggregateOutputType? $sum;

  @JsonKey(name: '_min')
  final UserMinAggregateOutputType? $min;

  @JsonKey(name: '_max')
  final UserMaxAggregateOutputType? $max;

  Map<String, dynamic> toJson() => _$UserGroupByOutputTypeToJson(this);
}

@JsonSerializable(createFactory: true, createToJson: true, explicitToJson: true)
class AffectedRowsOutput {
  const AffectedRowsOutput({
    required this.count,
  });

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  @JsonKey(name: 'count')
  final int count;

  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@JsonSerializable(createFactory: true, createToJson: true, explicitToJson: true)
class UserCountAggregateOutputType {
  const UserCountAggregateOutputType({
    required this.id,
    required this.email,
    required this.name,
    required this.password,
    required this.role,
    required this.createdAt,
    required this.updatedAt,
    required this.$all,
  });

  factory UserCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserCountAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'email')
  final int email;

  @JsonKey(name: 'name')
  final int name;

  @JsonKey(name: 'password')
  final int password;

  @JsonKey(name: 'role')
  final int role;

  @JsonKey(name: 'createdAt')
  final int createdAt;

  @JsonKey(name: 'updatedAt')
  final int updatedAt;

  @JsonKey(name: '_all')
  final int $all;

  Map<String, dynamic> toJson() => _$UserCountAggregateOutputTypeToJson(this);
}

@JsonSerializable(createFactory: true, createToJson: true, explicitToJson: true)
class UserAvgAggregateOutputType {
  const UserAvgAggregateOutputType({
    this.id,
  });

  factory UserAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserAvgAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final double? id;

  Map<String, dynamic> toJson() => _$UserAvgAggregateOutputTypeToJson(this);
}

@JsonSerializable(createFactory: true, createToJson: true, explicitToJson: true)
class UserSumAggregateOutputType {
  const UserSumAggregateOutputType({
    this.id,
  });

  factory UserSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserSumAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int? id;

  Map<String, dynamic> toJson() => _$UserSumAggregateOutputTypeToJson(this);
}

@JsonSerializable(createFactory: true, createToJson: true, explicitToJson: true)
class UserMinAggregateOutputType {
  const UserMinAggregateOutputType({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  factory UserMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMinAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int? id;

  @JsonKey(name: 'email')
  final String? email;

  @JsonKey(name: 'name')
  final String? name;

  @JsonKey(name: 'password')
  final String? password;

  @JsonKey(name: 'role')
  final String? role;

  @JsonKey(name: 'createdAt')
  final DateTime? createdAt;

  @JsonKey(name: 'updatedAt')
  final DateTime? updatedAt;

  Map<String, dynamic> toJson() => _$UserMinAggregateOutputTypeToJson(this);
}

@JsonSerializable(createFactory: true, createToJson: true, explicitToJson: true)
class UserMaxAggregateOutputType {
  const UserMaxAggregateOutputType({
    this.id,
    this.email,
    this.name,
    this.password,
    this.role,
    this.createdAt,
    this.updatedAt,
  });

  factory UserMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMaxAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int? id;

  @JsonKey(name: 'email')
  final String? email;

  @JsonKey(name: 'name')
  final String? name;

  @JsonKey(name: 'password')
  final String? password;

  @JsonKey(name: 'role')
  final String? role;

  @JsonKey(name: 'createdAt')
  final DateTime? createdAt;

  @JsonKey(name: 'updatedAt')
  final DateTime? updatedAt;

  Map<String, dynamic> toJson() => _$UserMaxAggregateOutputTypeToJson(this);
}

@JsonSerializable(createFactory: true, createToJson: true, explicitToJson: true)
class User {
  const User({
    required this.id,
    required this.email,
    this.name,
    this.password,
    this.role,
    required this.createdAt,
    required this.updatedAt,
  });

  factory User.fromJson(Map<String, dynamic> json) => _$UserFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'email')
  final String email;

  @JsonKey(name: 'name')
  final String? name;

  @JsonKey(name: 'password')
  final String? password;

  @JsonKey(name: 'role')
  final String? role;

  @JsonKey(name: 'createdAt')
  final DateTime createdAt;

  @JsonKey(name: 'updatedAt')
  final DateTime updatedAt;

  Map<String, dynamic> toJson() => _$UserToJson(this);
}

class UserDelegate {
  const UserDelegate({
    required runtime.Engine engine,
    runtime.QueryEngineRequestHeaders? headers,
  })  : _engine = engine,
        _headers = headers;

  final runtime.Engine _engine;
  final runtime.QueryEngineRequestHeaders? _headers;

  Future<User?> findUnique({
    required UserWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findUniqueUser',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: true)]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['findUniqueUser'] == null) {
      return null;
    }

    return User.fromJson(result.data['findUniqueUser'] as Map<String, dynamic>);
  }

  Future<User?> findFirst({
    UserWhereInput? where,
    List<UserOrderByWithRelationInput>? orderBy,
    UserWhereUniqueInput? cursor,
    int? take,
    int? skip,
    List<UserScalarFieldEnum>? distinct,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findFirstUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false),
            runtime.GraphQLArg('distinct', distinct, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['findFirstUser'] == null) {
      return null;
    }

    return User.fromJson(result.data['findFirstUser'] as Map<String, dynamic>);
  }

  Future<List<User>> findMany({
    UserWhereInput? where,
    List<UserOrderByWithRelationInput>? orderBy,
    UserWhereUniqueInput? cursor,
    int? take,
    int? skip,
    List<UserScalarFieldEnum>? distinct,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'findManyUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false),
            runtime.GraphQLArg('distinct', distinct, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return (result.data['findManyUser'] as List<dynamic>)
        .map<User>(
          (dynamic item) => User.fromJson(item as Map<String, dynamic>),
        )
        .toList();
  }

  Future<User> create({
    required runtime.PrismaUnion<UserCreateInput, UserUncheckedCreateInput>
        data,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'createOneUser',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('data', data, isRequired: true)]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return User.fromJson(result.data['createOneUser'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> createMany({
    required List<UserCreateManyInput> data,
    bool? skipDuplicates,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'createManyUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('skipDuplicates', skipDuplicates,
                isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['createManyUser'] as Map<String, dynamic>);
  }

  Future<User?> update({
    required runtime.PrismaUnion<UserUpdateInput, UserUncheckedUpdateInput>
        data,
    required UserWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'updateOneUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('where', where, isRequired: true)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['updateOneUser'] == null) {
      return null;
    }

    return User.fromJson(result.data['updateOneUser'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> updateMany({
    required runtime
        .PrismaUnion<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
        data,
    UserWhereInput? where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'updateManyUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('data', data, isRequired: true),
            runtime.GraphQLArg('where', where, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['updateManyUser'] as Map<String, dynamic>);
  }

  Future<User> upsert({
    required UserWhereUniqueInput where,
    required runtime.PrismaUnion<UserCreateInput, UserUncheckedCreateInput>
        create,
    required runtime.PrismaUnion<UserUpdateInput, UserUncheckedUpdateInput>
        update,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'upsertOneUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: true),
            runtime.GraphQLArg('create', create, isRequired: true),
            runtime.GraphQLArg('update', update, isRequired: true)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return User.fromJson(result.data['upsertOneUser'] as Map<String, dynamic>);
  }

  Future<User?> delete({
    required UserWhereUniqueInput where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'deleteOneUser',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: true)]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    if (result.data['deleteOneUser'] == null) {
      return null;
    }

    return User.fromJson(result.data['deleteOneUser'] as Map<String, dynamic>);
  }

  Future<AffectedRowsOutput> deleteMany({
    UserWhereInput? where,
  }) async {
    final String sdl = runtime.GraphQLField(
      'mutation',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'deleteManyUser',
          args: runtime.GraphQLArgs(
              [runtime.GraphQLArg('where', where, isRequired: false)]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AffectedRowsOutput.fromJson(
        result.data['deleteManyUser'] as Map<String, dynamic>);
  }

  Future<AggregateUser> aggregate({
    UserWhereInput? where,
    List<UserOrderByWithRelationInput>? orderBy,
    UserWhereUniqueInput? cursor,
    int? take,
    int? skip,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'aggregateUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('cursor', cursor, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return AggregateUser.fromJson(
        result.data['aggregateUser'] as Map<String, dynamic>);
  }

  Future<List<UserGroupByOutputType>> groupBy({
    UserWhereInput? where,
    List<UserOrderByWithAggregationInput>? orderBy,
    required List<UserScalarFieldEnum> by,
    UserScalarWhereWithAggregatesInput? having,
    int? take,
    int? skip,
  }) async {
    final String sdl = runtime.GraphQLField(
      'query',
      fields: runtime.GraphQLFields([
        runtime.GraphQLField(
          'groupByUser',
          args: runtime.GraphQLArgs([
            runtime.GraphQLArg('where', where, isRequired: false),
            runtime.GraphQLArg('orderBy', orderBy, isRequired: false),
            runtime.GraphQLArg('by', by, isRequired: true),
            runtime.GraphQLArg('having', having, isRequired: false),
            runtime.GraphQLArg('take', take, isRequired: false),
            runtime.GraphQLArg('skip', skip, isRequired: false)
          ]),
          fields: runtime.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum element) =>
                  runtime.GraphQLField(element.name))
              .toList()),
        ),
      ]),
    ).toSdl();

    final runtime.QueryEngineResult result =
        await _engine.request(query: sdl, headers: _headers);

    return (result.data['groupByUser'] as List<dynamic>)
        .map<UserGroupByOutputType>(
          (dynamic item) =>
              UserGroupByOutputType.fromJson(item as Map<String, dynamic>),
        )
        .toList();
  }
}

/// Prisma schema DMMF json string.
const String _dmmfStr =
    r'{"datamodel":{"models":[{"name":"User","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}},{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"name","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"name","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"password","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"password","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"role","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"role","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"updatedAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":true,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"updatedAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":true}}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false,"fieldsMap":null,"documentation":null,"extra":{"name":"User","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"password","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"role","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":true}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}}],"enums":[],"types":[]},"schema":{"rootQueryType":null,"rootMutationType":null,"inputObjectTypes":{"model":null,"prisma":[{"name":"UserWhereInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringNullableFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringNullableFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"role","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringNullableFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserOrderByWithRelationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"role","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserWhereUniqueInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserOrderByWithAggregationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"role","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCountOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserAvgOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserMaxOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserMinOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserSumOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserScalarWhereWithAggregatesInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringNullableWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringNullableWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"role","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringNullableWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"role","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"role","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"role","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"role","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"name","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"role","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateManyMutationInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"role","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedUpdateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"role","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NullableStringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"mode","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"QueryMode","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringNullableFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"mode","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"QueryMode","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"not","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringNullableFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserCountOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"role","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserAvgOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserMaxOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"role","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserMinOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"name","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"role","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserSumOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"mode","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"QueryMode","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringNullableWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"mode","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"QueryMode","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"not","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringNullableWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntNullableFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringNullableFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringNullableFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"increment","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"decrement","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"multiply","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"divide","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"StringFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"NullableStringFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"NestedIntFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringNullableFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringNullableFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"NestedDateTimeFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedIntWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedFloatFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null},{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringNullableWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringNullableWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntNullableFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringNullableFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringNullableFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedIntNullableFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":true,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntNullableFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Null","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"NestedDateTimeWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null}]},"outputObjectTypes":{"model":[{"name":"User","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"role","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null}],"prisma":[{"name":"Query","fields":[{"name":"findFirstUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findManyUser","isNullable":false,"outputType":{"isList":true,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"aggregateUser","isNullable":false,"outputType":{"isList":false,"type":"AggregateUser","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"groupByUser","isNullable":false,"outputType":{"isList":true,"type":"UserGroupByOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"by","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"},{"isList":false,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"having","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findUniqueUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"Mutation","fields":[{"name":"createOneUser","isNullable":false,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"upsertOneUser","isNullable":false,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"createManyUser","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"UserCreateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"skipDuplicates","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteOneUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateOneUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateManyUser","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateManyMutationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteManyUser","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"executeRaw","isNullable":false,"outputType":{"isList":false,"type":"Json","location":"scalar","namespace":null},"args":[{"name":"query","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"parameters","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Json","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"queryRaw","isNullable":false,"outputType":{"isList":false,"type":"Json","location":"scalar","namespace":null},"args":[{"name":"query","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"parameters","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Json","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AggregateUser","fields":[{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"UserCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"UserAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"UserSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"UserMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"UserMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserGroupByOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"role","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"UserCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"UserAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"UserSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"UserMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"UserMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AffectedRowsOutput","fields":[{"name":"count","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserCountAggregateOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"role","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_all","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserAvgAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Float","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserSumAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserMinAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"role","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserMaxAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"name","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"role","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null}]},"enumTypes":{"model":null,"prisma":[{"name":"QueryMode","values":["default","insensitive"]},{"name":"SortOrder","values":["asc","desc"]},{"name":"TransactionIsolationLevel","values":["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]},{"name":"UserScalarFieldEnum","values":["id","email","name","password","role","createdAt","updatedAt"]}]}},"mappings":{"modelOperations":[{"model":"User","findUnique":"findUniqueUser","findFirst":"findFirstUser","findMany":"findManyUser","create":"createOneUser","createMany":"createManyUser","update":"updateOneUser","updateMany":"updateManyUser","upsert":"upsertOneUser","delete":"deleteOneUser","deleteMany":"deleteManyUser","aggregate":"aggregateUser","groupBy":"groupByUser","findRaw":null,"aggregateRaw":null}],"otherOperations":{"read":[],"write":["executeRaw","queryRaw"]}}}';

/// Prisma schema DMMF.
final dmmf.Document _dmmf =
    dmmf.Document.fromJson(convert.json.decode(_dmmfStr));

/// Prisma query engine executable.
const String _executable =
    'E:\projects\aprendendo-dart\.dart_tool\prisma\query-engine';

/// Prisma schema as string.
final String _schema =
    "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-dart\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        Int      @unique\n  email     String   @unique\n  name      String?\n  password  String?\n  role      String?  \n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}";

class Datasources {
  final runtime.Datasource? db;

  const Datasources({this.db});

  Map<String, runtime.Datasource> toOverwrites() =>
      <String, runtime.Datasource>{if (db != null) 'db': db!};
}

/// Prisma client.
class PrismaClient {
  final runtime.Engine _engine;
  final runtime.QueryEngineRequestHeaders? _headers;

  const PrismaClient._(this._engine, this._headers);

  factory PrismaClient({
    Datasources? datasources,
  }) {
    final runtime.Engine engine = runtime.BinaryEngine(
      datasources:
          datasources?.toOverwrites() ?? const <String, runtime.Datasource>{},
      dmmf: _dmmf,
      schema: _schema,
      environment: configure.environment.all,
      executable: _executable,
    );

    return PrismaClient._(engine, null);
  }

  /// Connect client to database.
  Future<void> $connect() => _engine.start();

  /// Disconnect client from database.
  Future<void> $disconnect() => _engine.stop();

  /// Start transaction.
  ///
  /// Example:
  /// ```dart
  /// final User user = await prisma.$transaction((PrismaClient prisma) async {
  ///   final User user = await prisma.user.create(...);
  ///   final Post post = await prisma.post.create(...);
  ///
  ///   return user;
  /// });
  /// ```
  Future<T> $transaction<T>(Future<T> Function(PrismaClient) handler) async {
    // If current client is already in transaction, use it.
    if (_headers?.transactionId != null) return handler(this);

    // Create transcation common headers.
    final runtime.TransactionHeaders headers = runtime.TransactionHeaders();

    // Request transaction info, Start transaction.
    final runtime.TransactionInfo info =
        await _engine.startTransaction(headers: headers);

    // Create new client with transaction headers.
    final PrismaClient transactionClient = PrismaClient._(
      _engine,
      runtime.QueryEngineRequestHeaders(transactionId: info.id),
    );

    try {
      return handler(transactionClient).then<T>((T value) async {
        await _engine.commitTransaction(headers: headers, info: info);

        return value;
      });
    } catch (e) {
      await _engine.rollbackTransaction(headers: headers, info: info);
      rethrow;
    }
  }

  /// User model delegate.
  UserDelegate get user => UserDelegate(engine: _engine, headers: _headers);
}
